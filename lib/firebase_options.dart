// This file is usually generated by the FlutterFire CLI (flutterfire).
// To generate a proper `DefaultFirebaseOptions` for your platforms run:
//   flutterfire configure
// or follow the Firebase setup docs and add platform config files.

import 'package:firebase_core/firebase_core.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:flutter/foundation.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions? get maybePlatform {
    // If dotenv not initialized yet, skip and return null.
    if (!dotenv.isInitialized) {
      if (kDebugMode) {
        debugPrint('[firebase] dotenv not initialized; skipping Firebase options');
      }
      return null;
    }
    // Attempt to build options from .env variables; if any critical ones missing return null.
    final apiKey = dotenv.maybeGet('FIREBASE_API_KEY');
    final appId = dotenv.maybeGet('FIREBASE_APP_ID');
    final projectId = dotenv.maybeGet('FIREBASE_PROJECT_ID');
    final senderId = dotenv.maybeGet('FIREBASE_MESSAGING_SENDER_ID');
    final storageBucket = dotenv.maybeGet('FIREBASE_STORAGE_BUCKET');

    if ([apiKey, appId, projectId, senderId].any((v) => v == null || v.isEmpty)) {
      if (kDebugMode) {
        debugPrint('[firebase] Missing required env vars; skipping Firebase init');
      }
      return null;
    }
    return FirebaseOptions(
      apiKey: apiKey!,
      appId: appId!,
      projectId: projectId!,
      messagingSenderId: senderId!,
      storageBucket: storageBucket,
      // Optional values; add more as needed.
    );
  }
}
